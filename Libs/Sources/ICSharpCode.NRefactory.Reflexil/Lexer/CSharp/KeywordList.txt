# this list is used for autogeneration of:
# - Keywords.cs
# - Tokens.cs
# - ATGTokensSection.txt - the TOKENS section of the ATG file

# use BuildKeywords to generate the different lists.

$Namespace=ICSharpCode.NRefactory.Parser.CSharp
$UpperCaseKeywords=False

# TERMINAL_CLASSES
EOF
Identifier
Literal

# SPECIAL_CHARACTERS
Assign = "="
Plus = "+"
Minus = "-"
Times = "*"
Div = "/"
Mod = "%"
		
Colon = ":"
DoubleColon = "::"
Semicolon = ";"
Question = "?"
DoubleQuestion = "??"
Comma = ","
Dot = "."
	
OpenCurlyBrace = "{"
CloseCurlyBrace = "}"

OpenSquareBracket = "["
CloseSquareBracket = "]"

OpenParenthesis = "("
CloseParenthesis = ")"

GreaterThan = ">"
LessThan = "<"

Not = "!"
LogicalAnd = "&&"
LogicalOr = "||"

BitwiseComplement = "~"
BitwiseAnd = "&"
BitwiseOr = "|"
Xor = "^"

Increment = "++"
Decrement = "--"
Equal = "=="
NotEqual = "!="
GreaterEqual = ">="
LessEqual = "<="
		
ShiftLeft = "<<"
#Removed because of generics
#ShiftRight = ">>"
		
PlusAssign = "+="
MinusAssign = "-="
TimesAssign = "*="
DivAssign = "/="
ModAssign = "%="
BitwiseAndAssign = "&="
BitwiseOrAssign = "|="
XorAssign = "^="
ShiftLeftAssign = "<<="
#Removed because of generics
#ShiftRightAssign = ">>="
Pointer = "->"
LambdaArrow = "=>"

# Keywordlist
"abstract"
"as"
"base"
"bool"
"break"
"byte"
"case"
"catch"
"char"
"checked"
"class"
"const"
"continue"
"decimal"
"default"
"delegate"
"do"
"double"
"else"
"enum"
"event"
"explicit"
"extern"
"false"
"finally"
"fixed"
"float"
"for"
"foreach"
"goto"
"if"
"implicit"
"in"
"int"
"interface"
"internal"
"is"
"lock"
"long"
"namespace"
"new"
"null"
"object"
"operator"
"out"
"override"
"params"
"private"
"protected"
"public"
"readonly"
"ref"
"return"
"sbyte"
"sealed"
"short"
"sizeof"
"stackalloc"
"static"
"string"
"struct"
"switch"
"this"
"throw"
"true"
"try"
"typeof"
"uint"
"ulong"
"unchecked"
"unsafe"
"ushort"
"using"
"virtual"
"void"
"volatile"
"while"

# Context dependent keywords.
"partial"
"where"
"get"
"set"
"add"
"remove"
"yield"
"select"
"group"
"by"
"into"
"from"
"ascending"
"descending"
"orderby"
"let"
"join"
"on"
"equals"

#Sets

# When changing IdentifierTokens, ensure you also change the "Identifier" production in cs.ATG
IdentifierTokens(Identifier, "partial", "where", "get", "set", "add", "remove", "yield", "select", "group", "by", "into", "from", "ascending", "descending", "orderby", "let", "join", "on", "equals")

OverloadableUnaryOp("-", "!", "~", "++", "--", "true", "false")
OverloadableBinaryOp("+", "-", "*", "/", "%", "&", "|", "^", "<<", "==", "!=", ">", "<", ">=", "<=")

TypeKW("char", "bool", "object", "string", "sbyte", "byte", "short", "ushort", "int", "uint", "long", "ulong", "float", "double", "decimal")
UnaryHead("+", "-", "!", "~", "*", "++", "--", "&")
AssnStartOp("+", "-", "!", "~", "*")
CastFollower(@SimpleTypeName, Literal, "(", "~", "!", @ExpressionStart)
AssgnOps("=", "+=", "-=", "*=", "/=", "%=", "&=", "|=", "<<=")
UnaryOp("+", "-", "!", "~", "*", "++", "--", "&")
TypeDeclarationKW("class", "interface", "struct", "enum", "delegate")
# for §7.5.4.2 "Grammar ambiguities" disambiguation for F(G<A,B>(7))
GenericFollower("(", ")", "]", "}", ":", ";", Comma, ".", "?", "==", "!=")

ValidInsideTypeName(@IdentifierTokens, @TypeKW, "<", ">", ".", "?", "[", Comma, "]", "*", "::")

# Keywords for keyword-code-completion
KCCClassModifiers("abstract", "sealed", "static", "unsafe", "partial")
KCCTypeDeclarationStart("public", "internal", @TypeDeclarationKW, @KCCClassModifiers)
KCCMemberVisibilityModifiers("protected", "private", "public", "internal")
SimpleTypeName(@TypeKW, @IdentifierTokens, "void")
GlobalLevel("namespace", "using", "extern", @KCCTypeDeclarationStart)
ExpressionStart("base", "delegate", "false", "new", "null", "sizeof", "this", "true", "typeof", "checked", "unchecked", "from", "default")
ExpressionContent("as", "is", "out", "ref", "in")
# interfaces cannot have inner classes etc., the only keyword (expect for type names) that may appear in them is "event"
InterfaceLevel("event")
TypeLevel(@KCCTypeDeclarationStart, @KCCMemberVisibilityModifiers, "const", "event", "explicit", "extern", "fixed", "implicit", "new", "operator", "override", "readonly", "virtual", "volatile")
StatementStart(@ExpressionStart, @ExpressionContent, "break", "case", "catch", "checked", "unchecked", "const", "continue", "default", "do", "else", "finally", "fixed", "for", "foreach", "goto", "if", "lock", "return", "stackalloc", "switch", "throw", "try", "unsafe", "using", "while", "yield")
QueryExpressionClauseStart("from", "let", "where", "join", "orderby", "group", "select")
InPropertyDeclaration(@KCCMemberVisibilityModifiers, "get", "set")
InEventDeclaration("add", "remove")

# unused: where
# "by", "into", "ascending", "descending", "on", "equals"
