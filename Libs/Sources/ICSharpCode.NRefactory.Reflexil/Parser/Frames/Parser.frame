/*
  Parser.frame file for NRefactory.
 */
using System;
using System.Reflection;

-->namespace

-->tokens

partial class Parser : AbstractParser
{
-->constants
	const  bool   T            = true;
	const  bool   x            = false;
	
-->declarations

/*
-->pragmas
*/

-->productions
	
	void ParseRoot()
	{
-->parseRoot
	}
	
	protected override void SynErr(int line, int col, int errorNumber)
	{
		string s;
		switch (errorNumber) {
-->errors
			default: s = "error " + errorNumber; break;
		}
		this.Errors.Error(line, col, s);
	}
	
	private bool StartOf(int s)
	{
		return set[s, lexer.LookAhead.kind];
	}
	
	static bool[,] set = {
-->initialization
	};
} // end Parser

$$$
